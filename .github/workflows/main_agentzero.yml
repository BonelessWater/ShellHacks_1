name: Deploy Full-Stack App to Azure - AgentZero (Deploy Only)

on:
  push:
    branches:
      - main
      - prod
      # Only deploy when you explicitly mark a commit
      # e.g. git commit -m "feat: xyz [deploy]"
      #      git push
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: false
        default: 'production'
        type: choice
        options: [production, staging]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name == 'push' && contains(github.event.head_commit.message, '[deploy]'))

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Show deployment info
        run: |
          echo "🚀 Deploying to: ${{ github.event.inputs.environment || 'production' }}"
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"

      - uses: actions/checkout@v4

      # ---- Frontend build ----
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install & Build React
        working-directory: ./frontend
        run: |
          npm ci || npm install
          npm run build
          echo "✅ React build completed"
          ls -la build | head -20

      # ---- Prepare deploy bundle ----
      - name: Create deployment package
        run: |
          echo "📦 Preparing deploy/"
          rm -rf deploy
          mkdir -p deploy/api

          # Frontend: production build
          cp package.json package-lock.json server.js deploy/
          cp -r frontend/build deploy/build

          # Backend: Python files + requirements
          if [ -f requirements.txt ]; then
            cp requirements.txt deploy/api/requirements.txt
          elif [ -f backend/requirements.txt ]; then
            cp backend/requirements.txt deploy/api/requirements.txt
          fi

          if [ -f backend/main.py ]; then
            cp backend/main.py deploy/api/
          fi
          find backend -name "*.py" \
            -not -path "*/__pycache__/*" \
            -not -path "*/tests/*" \
            -not -path "*/test/*" \
            -exec cp -n {} deploy/api/ \;

          # Startup script goes directly into deploy/
          cat > deploy/startup.sh << 'EOF'
          #!/bin/bash
          set -e

          echo "🚀 Starting AgentZero - Node.js Primary Architecture"
          echo "📍 Current directory: $(pwd)"
          echo "📂 Directory contents:"
          ls -la

          export NODE_ENV=production
          export PORT="${PORT:-3000}"
          export REACT_APP_API_URL="http://localhost:8000"

          # Node.js deps
          if [ ! -d "node_modules" ]; then
            echo "📦 Installing Node.js production dependencies..."
            npm install --production --silent
          else
            echo "✅ Node.js dependencies already installed"
          fi

          # FastAPI backend
          if [ -d "api" ]; then
            echo "🐍 Setting up FastAPI backend..."
            cd api
            if command -v python3 >/dev/null 2>&1; then
              PY=python3
            else
              PY=python
            fi
            $PY -m pip install --upgrade pip --quiet || true
            $PY -m pip install -r requirements.txt --quiet
            echo "🔄 Starting FastAPI backend on :8000..."
            $PY -m uvicorn main:app --host 0.0.0.0 --port 8000 --workers 1 &
            FASTAPI_PID=$!
            cd ..
          fi

          if [ -d "build" ]; then
            echo "✅ React build directory found"
          else
            echo "❌ No React build directory found"
            exit 1
          fi

          if [ -f "server.js" ]; then
            echo "✅ server.js found"
          else
            echo "❌ server.js missing"
            exit 1
          fi

          trap 'echo "🛑 Stopping services..."; kill ${FASTAPI_PID:-0} 2>/dev/null || true; exit 0' SIGTERM SIGINT

          echo "🟢 Starting Node.js Express server on port $PORT..."
          node server.js
          EOF

          chmod +x deploy/startup.sh

          echo "📋 Preview deploy structure:"
          find deploy -maxdepth 2 -type f -print | sed 's/^/ - /'

      # ---- Azure Login ----
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_88FBF5A58CF4436E8F8955E200248A41 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_7DE0416DFB4B4CB88EDDCA0CC26BC123 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_AD05817C00C745649FDAAE35BB36A645 }}

      - name: Zip deploy contents
        run: |
          cd deploy
          zip -r ../deploy.zip .

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'AgentZero'
          slot-name: 'Production'
          package: './deploy.zip'
          clean: true
          restart: true

