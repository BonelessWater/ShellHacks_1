# Azure DevOps CI/CD Pipeline for Node.js + Python App
trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Azure App Service settings
  azureSubscription: 'your-azure-subscription'
  webAppName: 'shellhacks-app'
  pythonVersion: '3.11'
  nodeVersion: '18.x'

stages:
- stage: Build
  displayName: 'Build Application'
  jobs:
  - job: BuildFrontend
    displayName: 'Build React Frontend'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: $(nodeVersion)
      displayName: 'Install Node.js'

    - script: |
        cd frontend
        npm ci
        npm run build
      displayName: 'Build React App'

    - task: CopyFiles@2
      inputs:
        SourceFolder: 'frontend/build'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/frontend/build'
      displayName: 'Copy Frontend Build'

    - script: |
        cp server.js $(Build.ArtifactStagingDirectory)/
        cp package.json $(Build.ArtifactStagingDirectory)/
      displayName: 'Copy Server Files'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'frontend'
      displayName: 'Publish Frontend Artifact'

  - job: BuildBackend
    displayName: 'Build Python Backend'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: $(pythonVersion)
      displayName: 'Use Python $(pythonVersion)'

    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install Python Dependencies'

    - task: CopyFiles@2
      inputs:
        SourceFolder: 'backend'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/backend'
      displayName: 'Copy Backend Files'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '.'
        Contents: 'requirements.txt'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Copy Requirements'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'backend'
      displayName: 'Publish Backend Artifact'

- stage: Deploy
  displayName: 'Deploy to Azure'
  dependsOn: Build
  jobs:
  - deployment: DeployFrontend
    displayName: 'Deploy Frontend to Azure App Service'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifactName: 'frontend'
              downloadPath: '$(System.ArtifactsDirectory)'

          - task: AzureWebApp@1
            inputs:
              azureSubscription: $(azureSubscription)
              appType: 'webAppLinux'
              appName: '$(webAppName)-frontend'
              package: '$(System.ArtifactsDirectory)/frontend'
              runtimeStack: 'NODE|18-lts'
              startUpCommand: 'node server.js'

  - deployment: DeployBackend
    displayName: 'Deploy Backend to Azure App Service'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifactName: 'backend'
              downloadPath: '$(System.ArtifactsDirectory)'

          - task: AzureWebApp@1
            inputs:
              azureSubscription: $(azureSubscription)
              appType: 'webAppLinux'
              appName: '$(webAppName)-backend'
              package: '$(System.ArtifactsDirectory)/backend'
              runtimeStack: 'PYTHON|3.11'
              startUpCommand: 'python -m uvicorn backend.main:app --host 0.0.0.0 --port 8000'